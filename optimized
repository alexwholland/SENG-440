	.arch armv7-a
	.eabi_attribute 28, 1
	.eabi_attribute 20, 1
	.eabi_attribute 21, 1
	.eabi_attribute 23, 3
	.eabi_attribute 24, 1
	.eabi_attribute 25, 1
	.eabi_attribute 26, 2
	.eabi_attribute 30, 6
	.eabi_attribute 34, 1
	.eabi_attribute 18, 4
	.file	"optimized.c"
	.text
	.align	2
	.global	rgb_to_ycc
	.arch armv7-a
	.syntax unified
	.arm
	.fpu vfpv3-d16
	.type	rgb_to_ycc, %function
rgb_to_ycc:
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r4, r5, fp, lr}
	add	fp, sp, #12
	sub	sp, sp, #24
	str	r0, [fp, #-24]
	str	r1, [fp, #-28]
	str	r2, [fp, #-32]
	ldr	r3, [fp, #-28]
	ldr	r2, [fp, #-32]
	mul	r3, r2, r3
	str	r3, [fp, #-16]
	mov	r0, #4
	bl	malloc
	mov	r3, r0
	mov	r4, r3
	ldr	r2, [fp, #-16]
	mov	r3, r2
	lsl	r3, r3, #1
	add	r3, r3, r2
	mov	r0, r3
	bl	malloc
	mov	r3, r0
	str	r3, [r4]
	mov	r5, #0
	b	.L2
.L3:
	ldr	r3, [fp, #-24]
	ldr	r2, [r3]
	mov	r1, r5
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	add	r3, r2, r3
	ldrb	r3, [r3]	@ zero_extendqisi2
	mov	r1, r3
	mov	r3, r1
	lsl	r3, r3, #5
	add	r3, r3, r1
	lsl	r2, r3, #7
	sub	r2, r2, r3
	lsl	r2, r2, #2
	sub	r2, r2, r1
	ldr	r3, [fp, #-24]
	ldr	r1, [r3]
	mov	r0, r5
	mov	r3, r0
	lsl	r3, r3, #1
	add	r3, r3, r0
	add	r3, r1, r3
	ldrb	r3, [r3, #1]	@ zero_extendqisi2
	mov	r1, r3
	movw	r3, #32909
	mul	r3, r3, r1
	add	r2, r2, r3
	ldr	r3, [fp, #-24]
	ldr	r1, [r3]
	mov	r0, r5
	mov	r3, r0
	lsl	r3, r3, #1
	add	r3, r3, r0
	add	r3, r1, r3
	ldrb	r3, [r3, #2]	@ zero_extendqisi2
	mov	r1, r3
	movw	r3, #6391
	mul	r3, r3, r1
	add	r3, r2, r3
	asr	r3, r3, #16
	uxtb	r2, r3
	ldr	r1, [r4]
	mov	r0, r5
	mov	r3, r0
	lsl	r3, r3, #1
	add	r3, r3, r0
	add	r3, r1, r3
	add	r2, r2, #16
	uxtb	r2, r2
	strb	r2, [r3]
	ldr	r3, [fp, #-24]
	ldr	r2, [r3]
	mov	r1, r5
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	add	r3, r2, r3
	ldrb	r3, [r3]	@ zero_extendqisi2
	mov	r2, r3
	movw	r3, #55860
	movt	r3, 65535
	mul	r2, r3, r2
	ldr	r3, [fp, #-24]
	ldr	r1, [r3]
	mov	r0, r5
	mov	r3, r0
	lsl	r3, r3, #1
	add	r3, r3, r0
	add	r3, r1, r3
	ldrb	r3, [r3, #1]	@ zero_extendqisi2
	mov	r1, r3
	movw	r3, #46540
	movt	r3, 65535
	mul	r3, r3, r1
	add	r2, r2, r3
	ldr	r3, [fp, #-24]
	ldr	r1, [r3]
	mov	r0, r5
	mov	r3, r0
	lsl	r3, r3, #1
	add	r3, r3, r0
	add	r3, r1, r3
	ldrb	r3, [r3, #2]	@ zero_extendqisi2
	mov	r1, r3
	mov	r3, r1
	lsl	r3, r3, #3
	sub	r3, r3, r1
	lsl	r3, r3, #12
	add	r3, r2, r3
	asr	r3, r3, #16
	uxtb	r2, r3
	ldr	r1, [r4]
	mov	r0, r5
	mov	r3, r0
	lsl	r3, r3, #1
	add	r3, r3, r0
	add	r3, r1, r3
	sub	r2, r2, #128
	uxtb	r2, r2
	strb	r2, [r3, #1]
	ldr	r3, [fp, #-24]
	ldr	r2, [r3]
	mov	r1, r5
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	add	r3, r2, r3
	ldrb	r3, [r3]	@ zero_extendqisi2
	mov	r2, r3
	mov	r3, r2
	lsl	r3, r3, #3
	sub	r3, r3, r2
	lsl	r3, r3, #12
	mov	r0, r3
	ldr	r3, [fp, #-24]
	ldr	r2, [r3]
	mov	r1, r5
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	add	r3, r2, r3
	ldrb	r3, [r3, #1]	@ zero_extendqisi2
	mov	r2, r3
	movw	r3, #41527
	movt	r3, 65535
	mul	r3, r3, r2
	add	r2, r0, r3
	ldr	r3, [fp, #-24]
	ldr	r1, [r3]
	mov	r0, r5
	mov	r3, r0
	lsl	r3, r3, #1
	add	r3, r3, r0
	add	r3, r1, r3
	ldrb	r3, [r3, #2]	@ zero_extendqisi2
	mov	r1, r3
	movw	r3, #60874
	movt	r3, 65535
	mul	r3, r3, r1
	add	r3, r2, r3
	asr	r3, r3, #16
	uxtb	r2, r3
	ldr	r1, [r4]
	mov	r0, r5
	mov	r3, r0
	lsl	r3, r3, #1
	add	r3, r3, r0
	add	r3, r1, r3
	sub	r2, r2, #128
	uxtb	r2, r2
	strb	r2, [r3, #2]
	ldr	r3, [fp, #-24]
	ldr	r1, [r3]
	mov	r3, r5
	add	r2, r3, #1
	mov	r3, r2
	lsl	r3, r3, #1
	add	r3, r3, r2
	add	r3, r1, r3
	ldrb	r3, [r3]	@ zero_extendqisi2
	mov	r1, r3
	mov	r3, r1
	lsl	r3, r3, #5
	add	r3, r3, r1
	lsl	r2, r3, #7
	sub	r2, r2, r3
	lsl	r2, r2, #2
	sub	r1, r2, r1
	ldr	r3, [fp, #-24]
	ldr	r0, [r3]
	mov	r3, r5
	add	r2, r3, #1
	mov	r3, r2
	lsl	r3, r3, #1
	add	r3, r3, r2
	add	r3, r0, r3
	ldrb	r3, [r3, #1]	@ zero_extendqisi2
	mov	r2, r3
	movw	r3, #32909
	mul	r3, r3, r2
	add	r1, r1, r3
	ldr	r3, [fp, #-24]
	ldr	r0, [r3]
	mov	r3, r5
	add	r2, r3, #1
	mov	r3, r2
	lsl	r3, r3, #1
	add	r3, r3, r2
	add	r3, r0, r3
	ldrb	r3, [r3, #2]	@ zero_extendqisi2
	mov	r2, r3
	movw	r3, #6391
	mul	r3, r3, r2
	add	r3, r1, r3
	asr	r3, r3, #16
	uxtb	r1, r3
	ldr	r0, [r4]
	mov	r3, r5
	add	r2, r3, #1
	mov	r3, r2
	lsl	r3, r3, #1
	add	r3, r3, r2
	add	r3, r0, r3
	add	r2, r1, #16
	uxtb	r2, r2
	strb	r2, [r3]
	ldr	r3, [fp, #-24]
	ldr	r1, [r3]
	mov	r3, r5
	add	r2, r3, #1
	mov	r3, r2
	lsl	r3, r3, #1
	add	r3, r3, r2
	add	r3, r1, r3
	ldrb	r3, [r3]	@ zero_extendqisi2
	mov	r2, r3
	movw	r3, #55860
	movt	r3, 65535
	mul	r1, r3, r2
	ldr	r3, [fp, #-24]
	ldr	r0, [r3]
	mov	r3, r5
	add	r2, r3, #1
	mov	r3, r2
	lsl	r3, r3, #1
	add	r3, r3, r2
	add	r3, r0, r3
	ldrb	r3, [r3, #1]	@ zero_extendqisi2
	mov	r2, r3
	movw	r3, #46540
	movt	r3, 65535
	mul	r3, r3, r2
	add	r1, r1, r3
	ldr	r3, [fp, #-24]
	ldr	r0, [r3]
	mov	r3, r5
	add	r2, r3, #1
	mov	r3, r2
	lsl	r3, r3, #1
	add	r3, r3, r2
	add	r3, r0, r3
	ldrb	r3, [r3, #2]	@ zero_extendqisi2
	mov	r2, r3
	mov	r3, r2
	lsl	r3, r3, #3
	sub	r3, r3, r2
	lsl	r3, r3, #12
	add	r3, r1, r3
	asr	r3, r3, #16
	uxtb	r1, r3
	ldr	r0, [r4]
	mov	r3, r5
	add	r2, r3, #1
	mov	r3, r2
	lsl	r3, r3, #1
	add	r3, r3, r2
	add	r3, r0, r3
	sub	r2, r1, #128
	uxtb	r2, r2
	strb	r2, [r3, #1]
	ldr	r3, [fp, #-24]
	ldr	r1, [r3]
	mov	r3, r5
	add	r2, r3, #1
	mov	r3, r2
	lsl	r3, r3, #1
	add	r3, r3, r2
	add	r3, r1, r3
	ldrb	r3, [r3]	@ zero_extendqisi2
	mov	r2, r3
	mov	r3, r2
	lsl	r3, r3, #3
	sub	r3, r3, r2
	lsl	r3, r3, #12
	mov	r0, r3
	ldr	r3, [fp, #-24]
	ldr	r1, [r3]
	mov	r3, r5
	add	r2, r3, #1
	mov	r3, r2
	lsl	r3, r3, #1
	add	r3, r3, r2
	add	r3, r1, r3
	ldrb	r3, [r3, #1]	@ zero_extendqisi2
	mov	r2, r3
	movw	r3, #41527
	movt	r3, 65535
	mul	r3, r3, r2
	add	r1, r0, r3
	ldr	r3, [fp, #-24]
	ldr	r0, [r3]
	mov	r3, r5
	add	r2, r3, #1
	mov	r3, r2
	lsl	r3, r3, #1
	add	r3, r3, r2
	add	r3, r0, r3
	ldrb	r3, [r3, #2]	@ zero_extendqisi2
	mov	r2, r3
	movw	r3, #60874
	movt	r3, 65535
	mul	r3, r3, r2
	add	r3, r1, r3
	asr	r3, r3, #16
	uxtb	r1, r3
	ldr	r0, [r4]
	mov	r3, r5
	add	r2, r3, #1
	mov	r3, r2
	lsl	r3, r3, #1
	add	r3, r3, r2
	add	r3, r0, r3
	sub	r2, r1, #128
	uxtb	r2, r2
	strb	r2, [r3, #2]
	ldr	r3, [fp, #-24]
	ldr	r2, [r3]
	mov	r1, r5
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	add	r3, r3, #6
	add	r3, r2, r3
	ldrb	r3, [r3]	@ zero_extendqisi2
	mov	r1, r3
	mov	r3, r1
	lsl	r3, r3, #5
	add	r3, r3, r1
	lsl	r2, r3, #7
	sub	r2, r2, r3
	lsl	r2, r2, #2
	sub	r2, r2, r1
	ldr	r3, [fp, #-24]
	ldr	r1, [r3]
	mov	r0, r5
	mov	r3, r0
	lsl	r3, r3, #1
	add	r3, r3, r0
	add	r3, r3, #6
	add	r3, r1, r3
	ldrb	r3, [r3, #1]	@ zero_extendqisi2
	mov	r1, r3
	movw	r3, #32909
	mul	r3, r3, r1
	add	r2, r2, r3
	ldr	r3, [fp, #-24]
	ldr	r1, [r3]
	mov	r0, r5
	mov	r3, r0
	lsl	r3, r3, #1
	add	r3, r3, r0
	add	r3, r3, #6
	add	r3, r1, r3
	ldrb	r3, [r3, #2]	@ zero_extendqisi2
	mov	r1, r3
	movw	r3, #6391
	mul	r3, r3, r1
	add	r3, r2, r3
	asr	r3, r3, #16
	uxtb	r2, r3
	ldr	r1, [r4]
	mov	r0, r5
	mov	r3, r0
	lsl	r3, r3, #1
	add	r3, r3, r0
	add	r3, r3, #6
	add	r3, r1, r3
	add	r2, r2, #16
	uxtb	r2, r2
	strb	r2, [r3]
	ldr	r3, [fp, #-24]
	ldr	r2, [r3]
	mov	r1, r5
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	add	r3, r3, #6
	add	r3, r2, r3
	ldrb	r3, [r3]	@ zero_extendqisi2
	mov	r2, r3
	movw	r3, #55860
	movt	r3, 65535
	mul	r2, r3, r2
	ldr	r3, [fp, #-24]
	ldr	r1, [r3]
	mov	r0, r5
	mov	r3, r0
	lsl	r3, r3, #1
	add	r3, r3, r0
	add	r3, r3, #6
	add	r3, r1, r3
	ldrb	r3, [r3, #1]	@ zero_extendqisi2
	mov	r1, r3
	movw	r3, #46540
	movt	r3, 65535
	mul	r3, r3, r1
	add	r2, r2, r3
	ldr	r3, [fp, #-24]
	ldr	r1, [r3]
	mov	r0, r5
	mov	r3, r0
	lsl	r3, r3, #1
	add	r3, r3, r0
	add	r3, r3, #6
	add	r3, r1, r3
	ldrb	r3, [r3, #2]	@ zero_extendqisi2
	mov	r1, r3
	mov	r3, r1
	lsl	r3, r3, #3
	sub	r3, r3, r1
	lsl	r3, r3, #12
	add	r3, r2, r3
	asr	r3, r3, #16
	uxtb	r2, r3
	ldr	r1, [r4]
	mov	r0, r5
	mov	r3, r0
	lsl	r3, r3, #1
	add	r3, r3, r0
	add	r3, r3, #6
	add	r3, r1, r3
	sub	r2, r2, #128
	uxtb	r2, r2
	strb	r2, [r3, #1]
	ldr	r3, [fp, #-24]
	ldr	r2, [r3]
	mov	r1, r5
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	add	r3, r3, #6
	add	r3, r2, r3
	ldrb	r3, [r3]	@ zero_extendqisi2
	mov	r2, r3
	mov	r3, r2
	lsl	r3, r3, #3
	sub	r3, r3, r2
	lsl	r3, r3, #12
	mov	r0, r3
	ldr	r3, [fp, #-24]
	ldr	r2, [r3]
	mov	r1, r5
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	add	r3, r3, #6
	add	r3, r2, r3
	ldrb	r3, [r3, #1]	@ zero_extendqisi2
	mov	r2, r3
	movw	r3, #41527
	movt	r3, 65535
	mul	r3, r3, r2
	add	r2, r0, r3
	ldr	r3, [fp, #-24]
	ldr	r1, [r3]
	mov	r0, r5
	mov	r3, r0
	lsl	r3, r3, #1
	add	r3, r3, r0
	add	r3, r3, #6
	add	r3, r1, r3
	ldrb	r3, [r3, #2]	@ zero_extendqisi2
	mov	r1, r3
	movw	r3, #60874
	movt	r3, 65535
	mul	r3, r3, r1
	add	r3, r2, r3
	asr	r3, r3, #16
	uxtb	r2, r3
	ldr	r1, [r4]
	mov	r0, r5
	mov	r3, r0
	lsl	r3, r3, #1
	add	r3, r3, r0
	add	r3, r3, #6
	add	r3, r1, r3
	sub	r2, r2, #128
	uxtb	r2, r2
	strb	r2, [r3, #2]
	ldr	r3, [fp, #-24]
	ldr	r2, [r3]
	mov	r1, r5
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	add	r3, r3, #9
	add	r3, r2, r3
	ldrb	r3, [r3]	@ zero_extendqisi2
	mov	r1, r3
	mov	r3, r1
	lsl	r3, r3, #5
	add	r3, r3, r1
	lsl	r2, r3, #7
	sub	r2, r2, r3
	lsl	r2, r2, #2
	sub	r2, r2, r1
	ldr	r3, [fp, #-24]
	ldr	r1, [r3]
	mov	r0, r5
	mov	r3, r0
	lsl	r3, r3, #1
	add	r3, r3, r0
	add	r3, r3, #9
	add	r3, r1, r3
	ldrb	r3, [r3, #1]	@ zero_extendqisi2
	mov	r1, r3
	movw	r3, #32909
	mul	r3, r3, r1
	add	r2, r2, r3
	ldr	r3, [fp, #-24]
	ldr	r1, [r3]
	mov	r0, r5
	mov	r3, r0
	lsl	r3, r3, #1
	add	r3, r3, r0
	add	r3, r3, #9
	add	r3, r1, r3
	ldrb	r3, [r3, #2]	@ zero_extendqisi2
	mov	r1, r3
	movw	r3, #6391
	mul	r3, r3, r1
	add	r3, r2, r3
	asr	r3, r3, #16
	uxtb	r2, r3
	ldr	r1, [r4]
	mov	r0, r5
	mov	r3, r0
	lsl	r3, r3, #1
	add	r3, r3, r0
	add	r3, r3, #9
	add	r3, r1, r3
	add	r2, r2, #16
	uxtb	r2, r2
	strb	r2, [r3]
	ldr	r3, [fp, #-24]
	ldr	r2, [r3]
	mov	r1, r5
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	add	r3, r3, #9
	add	r3, r2, r3
	ldrb	r3, [r3]	@ zero_extendqisi2
	mov	r2, r3
	movw	r3, #55860
	movt	r3, 65535
	mul	r2, r3, r2
	ldr	r3, [fp, #-24]
	ldr	r1, [r3]
	mov	r0, r5
	mov	r3, r0
	lsl	r3, r3, #1
	add	r3, r3, r0
	add	r3, r3, #9
	add	r3, r1, r3
	ldrb	r3, [r3, #1]	@ zero_extendqisi2
	mov	r1, r3
	movw	r3, #46540
	movt	r3, 65535
	mul	r3, r3, r1
	add	r2, r2, r3
	ldr	r3, [fp, #-24]
	ldr	r1, [r3]
	mov	r0, r5
	mov	r3, r0
	lsl	r3, r3, #1
	add	r3, r3, r0
	add	r3, r3, #9
	add	r3, r1, r3
	ldrb	r3, [r3, #2]	@ zero_extendqisi2
	mov	r1, r3
	mov	r3, r1
	lsl	r3, r3, #3
	sub	r3, r3, r1
	lsl	r3, r3, #12
	add	r3, r2, r3
	asr	r3, r3, #16
	uxtb	r2, r3
	ldr	r1, [r4]
	mov	r0, r5
	mov	r3, r0
	lsl	r3, r3, #1
	add	r3, r3, r0
	add	r3, r3, #9
	add	r3, r1, r3
	sub	r2, r2, #128
	uxtb	r2, r2
	strb	r2, [r3, #1]
	ldr	r3, [fp, #-24]
	ldr	r2, [r3]
	mov	r1, r5
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	add	r3, r3, #9
	add	r3, r2, r3
	ldrb	r3, [r3]	@ zero_extendqisi2
	mov	r2, r3
	mov	r3, r2
	lsl	r3, r3, #3
	sub	r3, r3, r2
	lsl	r3, r3, #12
	mov	r0, r3
	ldr	r3, [fp, #-24]
	ldr	r2, [r3]
	mov	r1, r5
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	add	r3, r3, #9
	add	r3, r2, r3
	ldrb	r3, [r3, #1]	@ zero_extendqisi2
	mov	r2, r3
	movw	r3, #41527
	movt	r3, 65535
	mul	r3, r3, r2
	add	r2, r0, r3
	ldr	r3, [fp, #-24]
	ldr	r1, [r3]
	mov	r0, r5
	mov	r3, r0
	lsl	r3, r3, #1
	add	r3, r3, r0
	add	r3, r3, #9
	add	r3, r1, r3
	ldrb	r3, [r3, #2]	@ zero_extendqisi2
	mov	r1, r3
	movw	r3, #60874
	movt	r3, 65535
	mul	r3, r3, r1
	add	r3, r2, r3
	asr	r3, r3, #16
	uxtb	r2, r3
	ldr	r1, [r4]
	mov	r0, r5
	mov	r3, r0
	lsl	r3, r3, #1
	add	r3, r3, r0
	add	r3, r3, #9
	add	r3, r1, r3
	sub	r2, r2, #128
	uxtb	r2, r2
	strb	r2, [r3, #2]
	add	r5, r5, #4
.L2:
	ldr	r3, [fp, #-16]
	cmp	r5, r3
	blt	.L3
	mov	r3, r4
	mov	r0, r3
	sub	sp, fp, #12
	@ sp needed
	pop	{r4, r5, fp, pc}
	.size	rgb_to_ycc, .-rgb_to_ycc
	.align	2
	.global	downsample_ycc
	.syntax unified
	.arm
	.fpu vfpv3-d16
	.type	downsample_ycc, %function
downsample_ycc:
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r4, r5, r6, r7, r8, fp, lr}
	add	fp, sp, #24
	sub	sp, sp, #28
	str	r0, [fp, #-40]
	str	r1, [fp, #-44]
	str	r2, [fp, #-48]
	ldr	r3, [fp, #-44]
	ldr	r2, [fp, #-48]
	mul	r3, r2, r3
	str	r3, [fp, #-32]
	mov	r0, #4
	bl	malloc
	mov	r3, r0
	mov	r6, r3
	ldr	r3, [fp, #-32]
	asr	r3, r3, #2
	mov	r2, r3
	mov	r3, r2
	lsl	r3, r3, #1
	add	r3, r3, r2
	lsl	r3, r3, #1
	mov	r0, r3
	bl	malloc
	mov	r3, r0
	str	r3, [r6]
	mov	r8, #0
	b	.L6
.L9:
	ldr	r3, [fp, #-48]
	mul	r3, r3, r8
	asr	r7, r3, #1
	mov	r4, #0
	b	.L7
.L8:
	ldr	r3, [fp, #-48]
	mul	r3, r3, r8
	add	r3, r4, r3
	lsl	r5, r3, #1
	ldr	r3, [fp, #-40]
	ldr	r2, [r3]
	mov	r1, r5
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	add	r2, r2, r3
	ldr	r1, [r6]
	add	r3, r7, r4
	mov	r0, r3
	mov	r3, r0
	lsl	r3, r3, #1
	add	r3, r3, r0
	lsl	r3, r3, #1
	add	r3, r1, r3
	ldrb	r2, [r2]	@ zero_extendqisi2
	strb	r2, [r3]
	ldr	r3, [fp, #-40]
	ldr	r1, [r3]
	mov	r3, r5
	add	r2, r3, #1
	mov	r3, r2
	lsl	r3, r3, #1
	add	r3, r3, r2
	add	r2, r1, r3
	ldr	r1, [r6]
	add	r3, r7, r4
	mov	r0, r3
	mov	r3, r0
	lsl	r3, r3, #1
	add	r3, r3, r0
	lsl	r3, r3, #1
	add	r3, r1, r3
	ldrb	r2, [r2]	@ zero_extendqisi2
	strb	r2, [r3, #1]
	ldr	r3, [fp, #-40]
	ldr	r2, [r3]
	ldr	r3, [fp, #-48]
	add	r3, r5, r3
	mov	r1, r3
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	add	r2, r2, r3
	ldr	r1, [r6]
	add	r3, r7, r4
	mov	r0, r3
	mov	r3, r0
	lsl	r3, r3, #1
	add	r3, r3, r0
	lsl	r3, r3, #1
	add	r3, r1, r3
	ldrb	r2, [r2]	@ zero_extendqisi2
	strb	r2, [r3, #2]
	ldr	r3, [fp, #-40]
	ldr	r2, [r3]
	add	r1, r5, #1
	ldr	r3, [fp, #-48]
	add	r3, r1, r3
	mov	r1, r3
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	add	r2, r2, r3
	ldr	r1, [r6]
	add	r3, r7, r4
	mov	r0, r3
	mov	r3, r0
	lsl	r3, r3, #1
	add	r3, r3, r0
	lsl	r3, r3, #1
	add	r3, r1, r3
	ldrb	r2, [r2]	@ zero_extendqisi2
	strb	r2, [r3, #3]
	ldr	r3, [fp, #-40]
	ldr	r2, [r3]
	mov	r1, r5
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	add	r3, r2, r3
	ldrb	r3, [r3, #1]	@ zero_extendqisi2
	mov	r0, r3
	ldr	r3, [fp, #-40]
	ldr	r1, [r3]
	mov	r3, r5
	add	r2, r3, #1
	mov	r3, r2
	lsl	r3, r3, #1
	add	r3, r3, r2
	add	r3, r1, r3
	ldrb	r3, [r3, #1]	@ zero_extendqisi2
	add	r2, r0, r3
	ldr	r3, [fp, #-40]
	ldr	r1, [r3]
	ldr	r3, [fp, #-48]
	add	r3, r5, r3
	mov	r0, r3
	mov	r3, r0
	lsl	r3, r3, #1
	add	r3, r3, r0
	add	r3, r1, r3
	ldrb	r3, [r3, #1]	@ zero_extendqisi2
	add	r2, r2, r3
	ldr	r3, [fp, #-40]
	ldr	r1, [r3]
	add	r0, r5, #1
	ldr	r3, [fp, #-48]
	add	r3, r0, r3
	mov	r0, r3
	mov	r3, r0
	lsl	r3, r3, #1
	add	r3, r3, r0
	add	r3, r1, r3
	ldrb	r3, [r3, #1]	@ zero_extendqisi2
	add	r3, r2, r3
	asr	r0, r3, #2
	ldr	r2, [r6]
	add	r3, r7, r4
	mov	r1, r3
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	lsl	r3, r3, #1
	add	r3, r2, r3
	uxtb	r2, r0
	strb	r2, [r3, #4]
	ldr	r3, [fp, #-40]
	ldr	r2, [r3]
	mov	r1, r5
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	add	r3, r2, r3
	ldrb	r3, [r3, #2]	@ zero_extendqisi2
	mov	r0, r3
	ldr	r3, [fp, #-40]
	ldr	r1, [r3]
	mov	r3, r5
	add	r2, r3, #1
	mov	r3, r2
	lsl	r3, r3, #1
	add	r3, r3, r2
	add	r3, r1, r3
	ldrb	r3, [r3, #2]	@ zero_extendqisi2
	add	r2, r0, r3
	ldr	r3, [fp, #-40]
	ldr	r1, [r3]
	ldr	r3, [fp, #-48]
	add	r3, r5, r3
	mov	r0, r3
	mov	r3, r0
	lsl	r3, r3, #1
	add	r3, r3, r0
	add	r3, r1, r3
	ldrb	r3, [r3, #2]	@ zero_extendqisi2
	add	r2, r2, r3
	ldr	r3, [fp, #-40]
	ldr	r1, [r3]
	add	r0, r5, #1
	ldr	r3, [fp, #-48]
	add	r3, r0, r3
	mov	r0, r3
	mov	r3, r0
	lsl	r3, r3, #1
	add	r3, r3, r0
	add	r3, r1, r3
	ldrb	r3, [r3, #2]	@ zero_extendqisi2
	add	r3, r2, r3
	asr	r0, r3, #2
	ldr	r2, [r6]
	add	r3, r7, r4
	mov	r1, r3
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	lsl	r3, r3, #1
	add	r3, r2, r3
	uxtb	r2, r0
	strb	r2, [r3, #5]
	add	r4, r4, #1
.L7:
	ldr	r3, [fp, #-48]
	asr	r3, r3, #1
	cmp	r4, r3
	blt	.L8
	add	r8, r8, #1
.L6:
	ldr	r3, [fp, #-44]
	asr	r3, r3, #1
	cmp	r8, r3
	blt	.L9
	mov	r3, r6
	mov	r0, r3
	sub	sp, fp, #24
	@ sp needed
	pop	{r4, r5, r6, r7, r8, fp, pc}
	.size	downsample_ycc, .-downsample_ycc
	.align	2
	.global	upsample_ycc
	.syntax unified
	.arm
	.fpu vfpv3-d16
	.type	upsample_ycc, %function
upsample_ycc:
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r4, r5, r6, r7, r8, fp, lr}
	add	fp, sp, #24
	sub	sp, sp, #28
	str	r0, [fp, #-40]
	str	r1, [fp, #-44]
	str	r2, [fp, #-48]
	ldr	r3, [fp, #-44]
	ldr	r2, [fp, #-48]
	mul	r3, r2, r3
	str	r3, [fp, #-32]
	mov	r0, #4
	bl	malloc
	mov	r3, r0
	mov	r5, r3
	ldr	r2, [fp, #-32]
	mov	r3, r2
	lsl	r3, r3, #1
	add	r3, r3, r2
	mov	r0, r3
	bl	malloc
	mov	r3, r0
	str	r3, [r5]
	mov	r8, #0
	b	.L12
.L15:
	ldr	r3, [fp, #-48]
	asr	r3, r3, #1
	mul	r6, r3, r8
	mov	r4, #0
	b	.L13
.L14:
	ldr	r3, [fp, #-48]
	mul	r3, r3, r8
	add	r3, r4, r3
	lsl	r7, r3, #1
	ldr	r3, [fp, #-40]
	ldr	r2, [r3]
	add	r3, r6, r4
	mov	r1, r3
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	lsl	r3, r3, #1
	add	r2, r2, r3
	ldr	r1, [r5]
	mov	r0, r7
	mov	r3, r0
	lsl	r3, r3, #1
	add	r3, r3, r0
	add	r3, r1, r3
	ldrb	r2, [r2]	@ zero_extendqisi2
	strb	r2, [r3]
	ldr	r3, [fp, #-40]
	ldr	r2, [r3]
	add	r3, r6, r4
	mov	r1, r3
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	lsl	r3, r3, #1
	add	r1, r2, r3
	ldr	r0, [r5]
	mov	r3, r7
	add	r2, r3, #1
	mov	r3, r2
	lsl	r3, r3, #1
	add	r3, r3, r2
	add	r3, r0, r3
	ldrb	r2, [r1, #1]	@ zero_extendqisi2
	strb	r2, [r3]
	ldr	r3, [fp, #-40]
	ldr	r2, [r3]
	add	r3, r6, r4
	mov	r1, r3
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	lsl	r3, r3, #1
	add	r2, r2, r3
	ldr	r1, [r5]
	ldr	r3, [fp, #-48]
	add	r3, r7, r3
	mov	r0, r3
	mov	r3, r0
	lsl	r3, r3, #1
	add	r3, r3, r0
	add	r3, r1, r3
	ldrb	r2, [r2, #2]	@ zero_extendqisi2
	strb	r2, [r3]
	ldr	r3, [fp, #-40]
	ldr	r2, [r3]
	add	r3, r6, r4
	mov	r1, r3
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	lsl	r3, r3, #1
	add	r2, r2, r3
	ldr	r1, [r5]
	add	r0, r7, #1
	ldr	r3, [fp, #-48]
	add	r3, r0, r3
	mov	r0, r3
	mov	r3, r0
	lsl	r3, r3, #1
	add	r3, r3, r0
	add	r3, r1, r3
	ldrb	r2, [r2, #3]	@ zero_extendqisi2
	strb	r2, [r3]
	ldr	r3, [fp, #-40]
	ldr	r2, [r3]
	add	r3, r6, r4
	mov	r1, r3
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	lsl	r3, r3, #1
	add	r2, r2, r3
	ldr	r1, [r5]
	mov	r0, r7
	mov	r3, r0
	lsl	r3, r3, #1
	add	r3, r3, r0
	add	r3, r1, r3
	ldrb	r2, [r2, #4]	@ zero_extendqisi2
	strb	r2, [r3, #1]
	ldr	r3, [fp, #-40]
	ldr	r2, [r3]
	add	r3, r6, r4
	mov	r1, r3
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	lsl	r3, r3, #1
	add	r1, r2, r3
	ldr	r0, [r5]
	mov	r3, r7
	add	r2, r3, #1
	mov	r3, r2
	lsl	r3, r3, #1
	add	r3, r3, r2
	add	r3, r0, r3
	ldrb	r2, [r1, #4]	@ zero_extendqisi2
	strb	r2, [r3, #1]
	ldr	r3, [fp, #-40]
	ldr	r2, [r3]
	add	r3, r6, r4
	mov	r1, r3
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	lsl	r3, r3, #1
	add	r2, r2, r3
	ldr	r1, [r5]
	ldr	r3, [fp, #-48]
	add	r3, r7, r3
	mov	r0, r3
	mov	r3, r0
	lsl	r3, r3, #1
	add	r3, r3, r0
	add	r3, r1, r3
	ldrb	r2, [r2, #4]	@ zero_extendqisi2
	strb	r2, [r3, #1]
	ldr	r3, [fp, #-40]
	ldr	r2, [r3]
	add	r3, r6, r4
	mov	r1, r3
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	lsl	r3, r3, #1
	add	r2, r2, r3
	ldr	r1, [r5]
	add	r0, r7, #1
	ldr	r3, [fp, #-48]
	add	r3, r0, r3
	mov	r0, r3
	mov	r3, r0
	lsl	r3, r3, #1
	add	r3, r3, r0
	add	r3, r1, r3
	ldrb	r2, [r2, #4]	@ zero_extendqisi2
	strb	r2, [r3, #1]
	ldr	r3, [fp, #-40]
	ldr	r2, [r3]
	add	r3, r6, r4
	mov	r1, r3
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	lsl	r3, r3, #1
	add	r2, r2, r3
	ldr	r1, [r5]
	mov	r0, r7
	mov	r3, r0
	lsl	r3, r3, #1
	add	r3, r3, r0
	add	r3, r1, r3
	ldrb	r2, [r2, #5]	@ zero_extendqisi2
	strb	r2, [r3, #2]
	ldr	r3, [fp, #-40]
	ldr	r2, [r3]
	add	r3, r6, r4
	mov	r1, r3
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	lsl	r3, r3, #1
	add	r1, r2, r3
	ldr	r0, [r5]
	mov	r3, r7
	add	r2, r3, #1
	mov	r3, r2
	lsl	r3, r3, #1
	add	r3, r3, r2
	add	r3, r0, r3
	ldrb	r2, [r1, #5]	@ zero_extendqisi2
	strb	r2, [r3, #2]
	ldr	r3, [fp, #-40]
	ldr	r2, [r3]
	add	r3, r6, r4
	mov	r1, r3
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	lsl	r3, r3, #1
	add	r2, r2, r3
	ldr	r1, [r5]
	ldr	r3, [fp, #-48]
	add	r3, r7, r3
	mov	r0, r3
	mov	r3, r0
	lsl	r3, r3, #1
	add	r3, r3, r0
	add	r3, r1, r3
	ldrb	r2, [r2, #5]	@ zero_extendqisi2
	strb	r2, [r3, #2]
	ldr	r3, [fp, #-40]
	ldr	r2, [r3]
	add	r3, r6, r4
	mov	r1, r3
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	lsl	r3, r3, #1
	add	r2, r2, r3
	ldr	r1, [r5]
	add	r0, r7, #1
	ldr	r3, [fp, #-48]
	add	r3, r0, r3
	mov	r0, r3
	mov	r3, r0
	lsl	r3, r3, #1
	add	r3, r3, r0
	add	r3, r1, r3
	ldrb	r2, [r2, #5]	@ zero_extendqisi2
	strb	r2, [r3, #2]
	add	r4, r4, #1
.L13:
	ldr	r3, [fp, #-48]
	asr	r3, r3, #1
	cmp	r4, r3
	blt	.L14
	add	r8, r8, #1
.L12:
	ldr	r3, [fp, #-44]
	asr	r3, r3, #1
	cmp	r8, r3
	blt	.L15
	mov	r3, r5
	mov	r0, r3
	sub	sp, fp, #24
	@ sp needed
	pop	{r4, r5, r6, r7, r8, fp, pc}
	.size	upsample_ycc, .-upsample_ycc
	.align	2
	.syntax unified
	.arm
	.fpu vfpv3-d16
	.type	clamp, %function
clamp:
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	@ link register save eliminated.
	str	fp, [sp, #-4]!
	add	fp, sp, #0
	sub	sp, sp, #20
	str	r0, [fp, #-16]
	ldr	r3, [fp, #-16]
	asr	r3, r3, #8
	str	r3, [fp, #-8]
	ldr	r3, [fp, #-8]
	cmp	r3, #0
	beq	.L18
	ldr	r3, [fp, #-8]
	mvn	r3, r3
	lsr	r3, r3, #24
	str	r3, [fp, #-16]
.L18:
	ldr	r3, [fp, #-16]
	mov	r0, r3
	add	sp, fp, #0
	@ sp needed
	ldr	fp, [sp], #4
	bx	lr
	.size	clamp, .-clamp
	.align	2
	.global	ycc_to_rgb
	.syntax unified
	.arm
	.fpu vfpv3-d16
	.type	ycc_to_rgb, %function
ycc_to_rgb:
	@ args = 0, pretend = 0, frame = 72
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r4, r5, fp, lr}
	add	fp, sp, #12
	sub	sp, sp, #72
	str	r0, [fp, #-72]
	str	r1, [fp, #-76]
	str	r2, [fp, #-80]
	ldr	r3, [fp, #-76]
	ldr	r2, [fp, #-80]
	mul	r3, r2, r3
	str	r3, [fp, #-16]
	mov	r0, #4
	bl	malloc
	mov	r3, r0
	mov	r4, r3
	ldr	r2, [fp, #-16]
	mov	r3, r2
	lsl	r3, r3, #1
	add	r3, r3, r2
	mov	r0, r3
	bl	malloc
	mov	r3, r0
	str	r3, [r4]
	mov	r5, #0
	b	.L21
.L22:
	ldr	r3, [fp, #-72]
	ldr	r2, [r3]
	mov	r1, r5
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	add	r3, r2, r3
	ldrb	r3, [r3]	@ zero_extendqisi2
	sub	r3, r3, #16
	str	r3, [fp, #-20]
	ldr	r3, [fp, #-72]
	ldr	r1, [r3]
	mov	r3, r5
	add	r2, r3, #1
	mov	r3, r2
	lsl	r3, r3, #1
	add	r3, r3, r2
	add	r3, r1, r3
	ldrb	r3, [r3]	@ zero_extendqisi2
	sub	r3, r3, #16
	str	r3, [fp, #-24]
	ldr	r3, [fp, #-72]
	ldr	r2, [r3]
	mov	r1, r5
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	add	r3, r3, #6
	add	r3, r2, r3
	ldrb	r3, [r3]	@ zero_extendqisi2
	sub	r3, r3, #16
	str	r3, [fp, #-28]
	ldr	r3, [fp, #-72]
	ldr	r2, [r3]
	mov	r1, r5
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	add	r3, r3, #9
	add	r3, r2, r3
	ldrb	r3, [r3]	@ zero_extendqisi2
	sub	r3, r3, #16
	str	r3, [fp, #-32]
	ldr	r3, [fp, #-72]
	ldr	r2, [r3]
	mov	r1, r5
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	add	r3, r2, r3
	ldrb	r3, [r3, #1]	@ zero_extendqisi2
	sub	r3, r3, #128
	str	r3, [fp, #-36]
	ldr	r3, [fp, #-72]
	ldr	r1, [r3]
	mov	r3, r5
	add	r2, r3, #1
	mov	r3, r2
	lsl	r3, r3, #1
	add	r3, r3, r2
	add	r3, r1, r3
	ldrb	r3, [r3, #1]	@ zero_extendqisi2
	sub	r3, r3, #128
	str	r3, [fp, #-40]
	ldr	r3, [fp, #-72]
	ldr	r2, [r3]
	mov	r1, r5
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	add	r3, r3, #6
	add	r3, r2, r3
	ldrb	r3, [r3, #1]	@ zero_extendqisi2
	sub	r3, r3, #128
	str	r3, [fp, #-44]
	ldr	r3, [fp, #-72]
	ldr	r2, [r3]
	mov	r1, r5
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	add	r3, r3, #9
	add	r3, r2, r3
	ldrb	r3, [r3, #1]	@ zero_extendqisi2
	sub	r3, r3, #128
	str	r3, [fp, #-48]
	ldr	r3, [fp, #-72]
	ldr	r2, [r3]
	mov	r1, r5
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	add	r3, r2, r3
	ldrb	r3, [r3, #2]	@ zero_extendqisi2
	sub	r3, r3, #128
	str	r3, [fp, #-52]
	ldr	r3, [fp, #-72]
	ldr	r1, [r3]
	mov	r3, r5
	add	r2, r3, #1
	mov	r3, r2
	lsl	r3, r3, #1
	add	r3, r3, r2
	add	r3, r1, r3
	ldrb	r3, [r3, #2]	@ zero_extendqisi2
	sub	r3, r3, #128
	str	r3, [fp, #-56]
	ldr	r3, [fp, #-72]
	ldr	r2, [r3]
	mov	r1, r5
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	add	r3, r3, #6
	add	r3, r2, r3
	ldrb	r3, [r3, #2]	@ zero_extendqisi2
	sub	r3, r3, #128
	str	r3, [fp, #-60]
	ldr	r3, [fp, #-72]
	ldr	r2, [r3]
	mov	r1, r5
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	add	r3, r3, #9
	add	r3, r2, r3
	ldrb	r3, [r3, #2]	@ zero_extendqisi2
	sub	r3, r3, #128
	str	r3, [fp, #-64]
	ldr	r2, [fp, #-20]
	movw	r3, #32506
	movt	r3, 74
	mul	r2, r3, r2
	ldr	r1, [fp, #-52]
	movw	r3, #9437
	movt	r3, 102
	mul	r3, r3, r1
	add	r3, r2, r3
	asr	r3, r3, #22
	mov	r0, r3
	bl	clamp
	ldr	r2, [r4]
	mov	r1, r5
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	add	r3, r2, r3
	uxtb	r2, r0
	strb	r2, [r3]
	ldr	r2, [fp, #-20]
	movw	r3, #32506
	movt	r3, 74
	mul	r2, r3, r2
	ldr	r1, [fp, #-52]
	movw	r3, #63439
	movt	r3, 65483
	mul	r3, r3, r1
	add	r2, r2, r3
	ldr	r1, [fp, #-36]
	movw	r3, #63963
	movt	r3, 65510
	mul	r3, r3, r1
	add	r3, r2, r3
	asr	r3, r3, #22
	mov	r0, r3
	bl	clamp
	ldr	r2, [r4]
	mov	r1, r5
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	add	r3, r2, r3
	uxtb	r2, r0
	strb	r2, [r3, #1]
	ldr	r2, [fp, #-20]
	movw	r3, #32506
	movt	r3, 74
	mul	r2, r3, r2
	ldr	r1, [fp, #-36]
	movw	r3, #9961
	movt	r3, 129
	mul	r3, r3, r1
	add	r3, r2, r3
	asr	r3, r3, #22
	mov	r0, r3
	bl	clamp
	ldr	r2, [r4]
	mov	r1, r5
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	add	r3, r2, r3
	uxtb	r2, r0
	strb	r2, [r3, #2]
	ldr	r2, [fp, #-24]
	movw	r3, #32506
	movt	r3, 74
	mul	r2, r3, r2
	ldr	r1, [fp, #-56]
	movw	r3, #9437
	movt	r3, 102
	mul	r3, r3, r1
	add	r3, r2, r3
	asr	r3, r3, #22
	mov	r0, r3
	bl	clamp
	ldr	r1, [r4]
	mov	r3, r5
	add	r2, r3, #1
	mov	r3, r2
	lsl	r3, r3, #1
	add	r3, r3, r2
	add	r3, r1, r3
	uxtb	r2, r0
	strb	r2, [r3]
	ldr	r2, [fp, #-24]
	movw	r3, #32506
	movt	r3, 74
	mul	r2, r3, r2
	ldr	r1, [fp, #-56]
	movw	r3, #63439
	movt	r3, 65483
	mul	r3, r3, r1
	add	r2, r2, r3
	ldr	r1, [fp, #-40]
	movw	r3, #63963
	movt	r3, 65510
	mul	r3, r3, r1
	add	r3, r2, r3
	asr	r3, r3, #22
	mov	r0, r3
	bl	clamp
	ldr	r1, [r4]
	mov	r3, r5
	add	r2, r3, #1
	mov	r3, r2
	lsl	r3, r3, #1
	add	r3, r3, r2
	add	r3, r1, r3
	uxtb	r2, r0
	strb	r2, [r3, #1]
	ldr	r2, [fp, #-24]
	movw	r3, #32506
	movt	r3, 74
	mul	r2, r3, r2
	ldr	r1, [fp, #-40]
	movw	r3, #9961
	movt	r3, 129
	mul	r3, r3, r1
	add	r3, r2, r3
	asr	r3, r3, #22
	mov	r0, r3
	bl	clamp
	ldr	r1, [r4]
	mov	r3, r5
	add	r2, r3, #1
	mov	r3, r2
	lsl	r3, r3, #1
	add	r3, r3, r2
	add	r3, r1, r3
	uxtb	r2, r0
	strb	r2, [r3, #2]
	ldr	r2, [fp, #-28]
	movw	r3, #32506
	movt	r3, 74
	mul	r2, r3, r2
	ldr	r1, [fp, #-60]
	movw	r3, #9437
	movt	r3, 102
	mul	r3, r3, r1
	add	r3, r2, r3
	asr	r3, r3, #22
	mov	r0, r3
	bl	clamp
	ldr	r2, [r4]
	mov	r1, r5
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	add	r3, r3, #6
	add	r3, r2, r3
	uxtb	r2, r0
	strb	r2, [r3]
	ldr	r2, [fp, #-28]
	movw	r3, #32506
	movt	r3, 74
	mul	r2, r3, r2
	ldr	r1, [fp, #-60]
	movw	r3, #63439
	movt	r3, 65483
	mul	r3, r3, r1
	add	r2, r2, r3
	ldr	r1, [fp, #-44]
	movw	r3, #63963
	movt	r3, 65510
	mul	r3, r3, r1
	add	r3, r2, r3
	asr	r3, r3, #22
	mov	r0, r3
	bl	clamp
	ldr	r2, [r4]
	mov	r1, r5
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	add	r3, r3, #6
	add	r3, r2, r3
	uxtb	r2, r0
	strb	r2, [r3, #1]
	ldr	r2, [fp, #-28]
	movw	r3, #32506
	movt	r3, 74
	mul	r2, r3, r2
	ldr	r1, [fp, #-44]
	movw	r3, #9961
	movt	r3, 129
	mul	r3, r3, r1
	add	r3, r2, r3
	asr	r3, r3, #22
	mov	r0, r3
	bl	clamp
	ldr	r2, [r4]
	mov	r1, r5
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	add	r3, r3, #6
	add	r3, r2, r3
	uxtb	r2, r0
	strb	r2, [r3, #2]
	ldr	r2, [fp, #-32]
	movw	r3, #32506
	movt	r3, 74
	mul	r2, r3, r2
	ldr	r1, [fp, #-64]
	movw	r3, #9437
	movt	r3, 102
	mul	r3, r3, r1
	add	r3, r2, r3
	asr	r3, r3, #22
	mov	r0, r3
	bl	clamp
	ldr	r2, [r4]
	mov	r1, r5
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	add	r3, r3, #9
	add	r3, r2, r3
	uxtb	r2, r0
	strb	r2, [r3]
	ldr	r2, [fp, #-32]
	movw	r3, #32506
	movt	r3, 74
	mul	r2, r3, r2
	ldr	r1, [fp, #-64]
	movw	r3, #63439
	movt	r3, 65483
	mul	r3, r3, r1
	add	r2, r2, r3
	ldr	r1, [fp, #-48]
	movw	r3, #63963
	movt	r3, 65510
	mul	r3, r3, r1
	add	r3, r2, r3
	asr	r3, r3, #22
	mov	r0, r3
	bl	clamp
	ldr	r2, [r4]
	mov	r1, r5
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	add	r3, r3, #9
	add	r3, r2, r3
	uxtb	r2, r0
	strb	r2, [r3, #1]
	ldr	r2, [fp, #-32]
	movw	r3, #32506
	movt	r3, 74
	mul	r2, r3, r2
	ldr	r1, [fp, #-48]
	movw	r3, #9961
	movt	r3, 129
	mul	r3, r3, r1
	add	r3, r2, r3
	asr	r3, r3, #22
	mov	r0, r3
	bl	clamp
	ldr	r2, [r4]
	mov	r1, r5
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	add	r3, r3, #9
	add	r3, r2, r3
	uxtb	r2, r0
	strb	r2, [r3, #2]
	add	r5, r5, #4
.L21:
	ldr	r3, [fp, #-16]
	cmp	r5, r3
	blt	.L22
	mov	r3, r4
	mov	r0, r3
	sub	sp, fp, #12
	@ sp needed
	pop	{r4, r5, fp, pc}
	.size	ycc_to_rgb, .-ycc_to_rgb
	.section	.rodata
	.align	2
.LC0:
	.ascii	"rb\000"
	.align	2
.LC1:
	.ascii	"input_test.raw\000"
	.align	2
.LC2:
	.ascii	"Input File error\000"
	.align	2
.LC3:
	.ascii	"wb\000"
	.align	2
.LC4:
	.ascii	"input_test_converted.raw\000"
	.align	2
.LC5:
	.ascii	"Output File error\000"
	.text
	.align	2
	.global	main
	.syntax unified
	.arm
	.fpu vfpv3-d16
	.type	main, %function
main:
	@ args = 0, pretend = 0, frame = 48
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r4, fp, lr}
	add	fp, sp, #8
	sub	sp, sp, #52
	str	r0, [fp, #-56]
	str	r1, [fp, #-60]
	movw	r1, #:lower16:.LC0
	movt	r1, #:upper16:.LC0
	movw	r0, #:lower16:.LC1
	movt	r0, #:upper16:.LC1
	bl	fopen
	str	r0, [fp, #-16]
	ldr	r3, [fp, #-16]
	cmp	r3, #0
	bne	.L25
	movw	r0, #:lower16:.LC2
	movt	r0, #:upper16:.LC2
	bl	printf
	mov	r0, #1
	bl	exit
.L25:
	movw	r1, #:lower16:.LC3
	movt	r1, #:upper16:.LC3
	movw	r0, #:lower16:.LC4
	movt	r0, #:upper16:.LC4
	bl	fopen
	str	r0, [fp, #-20]
	ldr	r3, [fp, #-20]
	cmp	r3, #0
	bne	.L26
	movw	r0, #:lower16:.LC5
	movt	r0, #:upper16:.LC5
	bl	printf
	mov	r0, #1
	bl	exit
.L26:
	mov	r3, #100
	str	r3, [fp, #-24]
	mov	r3, #100
	str	r3, [fp, #-28]
	ldr	r3, [fp, #-24]
	ldr	r2, [fp, #-28]
	mul	r3, r2, r3
	str	r3, [fp, #-32]
	mov	r0, #4
	bl	malloc
	mov	r3, r0
	str	r3, [fp, #-36]
	ldr	r2, [fp, #-32]
	mov	r3, r2
	lsl	r3, r3, #1
	add	r3, r3, r2
	mov	r0, r3
	bl	malloc
	mov	r3, r0
	mov	r2, r3
	ldr	r3, [fp, #-36]
	str	r2, [r3]
	ldr	r3, [fp, #-36]
	ldr	r0, [r3]
	ldr	r2, [fp, #-32]
	ldr	r3, [fp, #-16]
	mov	r1, #3
	bl	fread
	ldr	r2, [fp, #-24]
	ldr	r1, [fp, #-28]
	ldr	r0, [fp, #-36]
	bl	rgb_to_ycc
	str	r0, [fp, #-40]
	ldr	r2, [fp, #-24]
	ldr	r1, [fp, #-28]
	ldr	r0, [fp, #-40]
	bl	downsample_ycc
	str	r0, [fp, #-44]
	ldr	r2, [fp, #-24]
	ldr	r1, [fp, #-28]
	ldr	r0, [fp, #-44]
	bl	upsample_ycc
	str	r0, [fp, #-48]
	ldr	r2, [fp, #-24]
	ldr	r1, [fp, #-28]
	ldr	r0, [fp, #-48]
	bl	ycc_to_rgb
	str	r0, [fp, #-52]
	mov	r4, #0
	b	.L27
.L28:
	ldr	r3, [fp, #-52]
	ldr	r2, [r3]
	mov	r1, r4
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	add	r3, r2, r3
	mov	r0, r3
	ldr	r3, [fp, #-20]
	mov	r2, #1
	mov	r1, #1
	bl	fwrite
	ldr	r3, [fp, #-52]
	ldr	r2, [r3]
	mov	r1, r4
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	add	r3, r2, r3
	add	r0, r3, #1
	ldr	r3, [fp, #-20]
	mov	r2, #1
	mov	r1, #1
	bl	fwrite
	ldr	r3, [fp, #-52]
	ldr	r2, [r3]
	mov	r1, r4
	mov	r3, r1
	lsl	r3, r3, #1
	add	r3, r3, r1
	add	r3, r2, r3
	add	r0, r3, #2
	ldr	r3, [fp, #-20]
	mov	r2, #1
	mov	r1, #1
	bl	fwrite
	add	r4, r4, #1
.L27:
	ldr	r3, [fp, #-32]
	cmp	r4, r3
	blt	.L28
	ldr	r0, [fp, #-20]
	bl	fclose
	ldr	r0, [fp, #-16]
	bl	fclose
	mov	r3, #0
	mov	r0, r3
	sub	sp, fp, #8
	@ sp needed
	pop	{r4, fp, pc}
	.size	main, .-main
	.ident	"GCC: (GNU) 8.2.1 20180801 (Red Hat 8.2.1-2)"
	.section	.note.GNU-stack,"",%progbits
